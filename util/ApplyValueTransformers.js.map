{"version":3,"sources":["../../src/util/ApplyValueTransformers.ts"],"names":[],"mappings":";;AAEA;IAAA;IA8BA,CAAC;IA7BU,oCAAa,GAApB,UAAqB,WAAkD,EAAE,aAAkB;QACvF,IAAI,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;YAC5B,IAAM,mBAAmB,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC,OAAO,EAAE,CAAC;YAC1D,OAAO,mBAAmB,CAAC,MAAM,CAAC,UAAC,gBAAgB,EAAE,YAAY;gBAC7D,IAAI,YAAY,CAAC,IAAI,KAAK,SAAS,EAAE;oBACjC,OAAO,YAAY,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;iBAC9C;gBACD,OAAO,gBAAgB,CAAC;YAC5B,CAAC,EAAE,aAAa,CAAC,CAAC;SACrB;QACD,IAAI,WAAW,CAAC,IAAI,KAAK,SAAS,EAAE;YAChC,OAAO,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAC1C;QACD,OAAO,aAAa,CAAC;IACzB,CAAC;IACM,kCAAW,GAAlB,UAAmB,WAAkD,EAAE,WAAgB;QACnF,IAAI,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;YAC5B,OAAO,WAAW,CAAC,MAAM,CAAC,UAAC,gBAAgB,EAAE,YAAY;gBACrD,IAAI,YAAY,CAAC,EAAE,KAAK,SAAS,EAAE;oBAC/B,OAAO,YAAY,CAAC,EAAE,CAAC,gBAAgB,CAAC,CAAC;iBAC5C;gBACD,OAAO,gBAAgB,CAAC;YAC5B,CAAC,EAAE,WAAW,CAAC,CAAC;SACnB;QACD,IAAI,WAAW,CAAC,EAAE,KAAK,SAAS,EAAE;YAC9B,OAAO,WAAW,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;SACtC;QACD,OAAO,WAAW,CAAC;IACvB,CAAC;IACL,6BAAC;AAAD,CA9BA,AA8BC,IAAA;AA9BY,wDAAsB","file":"ApplyValueTransformers.js","sourcesContent":["import { ValueTransformer } from \"../decorator/options/ValueTransformer\";\n\nexport class ApplyValueTransformers {\n    static transformFrom(transformer: ValueTransformer | ValueTransformer[], databaseValue: any) {\n        if (Array.isArray(transformer)) {\n            const reverseTransformers = transformer.slice().reverse();\n            return reverseTransformers.reduce((transformedValue, _transformer) => {\n                if (_transformer.from !== undefined) {\n                    return _transformer.from(transformedValue);\n                }\n                return transformedValue;\n            }, databaseValue);\n        }\n        if (transformer.from !== undefined) {\n            return transformer.from(databaseValue);\n        }\n        return databaseValue;\n    }\n    static transformTo(transformer: ValueTransformer | ValueTransformer[], entityValue: any) {\n        if (Array.isArray(transformer)) {\n            return transformer.reduce((transformedValue, _transformer) => {\n                if (_transformer.to !== undefined) {\n                    return _transformer.to(transformedValue);\n                }\n                return transformedValue;\n            }, entityValue);\n        }\n        if (transformer.to !== undefined) {\n            return transformer.to(entityValue);\n        }\n        return entityValue;\n    }\n}\n"],"sourceRoot":".."}